{
 "etype": "<type 'exceptions.RuntimeError'>", 
 "evalue": "RuntimeError('maximum recursion depth exceeded',)", 
 "exception": {
  "args": "('maximum recursion depth exceeded',)", 
  "message": "'maximum recursion depth exceeded'"
 }, 
 "frames": [
  {
   "call": "(request=<Request 'http://192.168.1.160/' [POST]>)", 
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/frappe/frappe-bench/apps/frappe/frappe/handler.pyc'>", 
    "frappe.handler. handle": "<function handle>", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "response": "None"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/app.py", 
   "func": "application", 
   "lines": {
    "53": "", 
    "54": "\t\tif frappe.local.form_dict.cmd:", 
    "55": "\t\t\tresponse = frappe.handler.handle()", 
    "56": "", 
    "57": "\t\telif frappe.request.path.startswith(\"/api/\"):"
   }, 
   "lnum": 55
  }, 
  {
   "call": "()", 
   "dump": {
    "cmd": "u'frappe.desk.form.save.savedocs'", 
    "global execute_cmd": "<function execute_cmd>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "handle", 
   "lines": {
    "17": "", 
    "18": "\tif cmd!='login':", 
    "19": "\t\texecute_cmd(cmd)", 
    "20": "", 
    "21": "\treturn build_response(\"json\")"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(cmd=u'frappe.desk.form.save.savedocs', from_async=False)", 
   "dump": {
    "frappe. call": "<function call>", 
    "frappe. form_dict": "{'action': u'Save', 'doc': u'{\"sku_name\":\"122038...69Z\"}', 'cmd': u'frappe.desk.form.save.savedocs'}", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "method": "<function savedocs>", 
    "ret": "undefined"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "execute_cmd", 
   "lines": {
    "34": "\tis_whitelisted(method)", 
    "35": "", 
    "36": "\tret = frappe.call(method, **frappe.form_dict)", 
    "37": "", 
    "38": "\t# returns with a message"
   }, 
   "lnum": 36
  }, 
  {
   "call": "(fn=<function savedocs>, *args=(), **kwargs={'action': u'Save', 'cmd': u'frappe.desk.form.save.savedocs', 'doc': u'{\"sku_name\":\"122038\",\"modified_by\":\"Administra...000,\"__last_sync_on\":\"2016-12-16T05:42:30.369Z\"}'})", 
   "dump": {
    "args": "()", 
    "fn": "<function savedocs>", 
    "newargs": "{'action': u'Save', 'doc': u'{\"sku_name\":\"122038\",\"modified_by\":\"Administra...000,\"__last_sync_on\":\"2016-12-16T05:42:30.369Z\"}'}"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "call", 
   "lines": {
    "877": "\t\tdel newargs[\"flags\"]", 
    "878": "", 
    "879": "\treturn fn(*args, **newargs)", 
    "880": "", 
    "881": "def make_property_setter(args, ignore_validate=False, validate_fields_for_doctype=True):"
   }, 
   "lnum": 879
  }, 
  {
   "call": "(doc=<erpnext.selling.doctype.sku.sku.SKU object>, action=u'Save')", 
   "dump": {
    "doc": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "doc. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/desk/form/save.py", 
   "func": "savedocs", 
   "lines": {
    "20": "\t\telse:", 
    "21": "\t\t\ttry:", 
    "22": "\t\t\t\tdoc.save()", 
    "23": "\t\t\texcept frappe.NameError, e:", 
    "24": "\t\t\t\tdoctype, name, original_exception = e if isinstance(e, tuple) else (doc.doctype or \"\", doc.name or \"\", None)"
   }, 
   "lnum": 22
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "229": "\t\tself.run_method(\"after_insert\")", 
    "230": "\t\tself.flags.in_insert = True", 
    "231": "\t\tself.run_post_save_methods()", 
    "232": "\t\tself.flags.in_insert = False", 
    "233": ""
   }, 
   "lnum": 231
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "existing_rate. save": "<bound method ItemPrice.save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()", 
    "88": ""
   }, 
   "lnum": 87
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. _save": "<bound method ItemPrice._save of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_post_save_methods": "<bound method ItemPrice.run_post_save_methods of....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "on_update", 
   "lines": {
    "51": "        # MARLO 20161216", 
    "52": "        if self.sku:", 
    "53": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "54": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "55": "            sku.save()"
   }, 
   "lnum": 55
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "existing_rate": "undefined", 
    "frappe. get_doc": "<function get_doc>", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. name": "u'Handy-122038'"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})", 
    "86": "                existing_rate.update({\"price_list_rate\" : self.group_rate})", 
    "87": "                existing_rate.save()"
   }, 
   "lnum": 85
  }, 
  {
   "call": "(arg1=u'Item Price', arg2={u'selling': 1, u'sku': u'Handy-122038'})", 
   "dump": {
    "arg1": "u'Item Price'", 
    "arg2": "{u'selling': 1, u'sku': u'Handy-122038'}", 
    "frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "frappe. model": "<module 'frappe.model' from '/home/frappe/frappe-bench/apps/frappe/frappe/model/__init__.pyc'>", 
    "frappe.model. document": "<module 'frappe.model.document' from '/home/frap...ppe-bench/apps/frappe/frappe/model/document.pyc'>", 
    "frappe.model.document. get_doc": "<function get_doc>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "get_doc", 
   "lines": {
    "576": "\t\"\"\"", 
    "577": "\timport frappe.model.document", 
    "578": "\treturn frappe.model.document.get_doc(arg1, arg2)", 
    "579": "", 
    "580": "def get_last_doc(doctype):"
   }, 
   "lnum": 578
  }, 
  {
   "call": "(arg1=u'Item Price', arg2={u'selling': 1, u'sku': u'Handy-122038'})", 
   "dump": {
    "arg1": "u'Item Price'", 
    "arg2": "{u'selling': 1, u'sku': u'Handy-122038'}", 
    "controller": "<class 'erpnext.selling.doctype.item_price.item_price.ItemPrice'>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "get_doc", 
   "lines": {
    "45": "\tcontroller = get_controller(doctype)", 
    "46": "\tif controller:", 
    "47": "\t\treturn controller(arg1, arg2)", 
    "48": "", 
    "49": "\traise ImportError, arg1"
   }, 
   "lnum": 47
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, arg1=u'Item Price', arg2={u'selling': 1, u'sku': u'Handy-122038'})", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. load_from_db": "<bound method ItemPrice.load_from_db of <erpnext....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "__init__", 
   "lines": {
    "78": "\t\t\t\t\tself.name = arg2", 
    "79": "", 
    "80": "\t\t\tself.load_from_db()", 
    "81": "", 
    "82": "\t\telif isinstance(arg1, dict):"
   }, 
   "lnum": 80
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "as_dict": "undefined", 
    "d": "undefined", 
    "frappe. db": "<frappe.database.Database instance>", 
    "frappe.db. get_value": "<bound method Database.get_value of <frappe.database.Database instance>>", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. doctype": "u'Item Price'", 
    "self. name": "u'Handy-122038'"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "load_from_db", 
   "lines": {
    "107": "", 
    "108": "\t\telse:", 
    "109": "\t\t\td = frappe.db.get_value(self.doctype, self.name, \"*\", as_dict=1)", 
    "110": "\t\t\tif not d:", 
    "111": "\t\t\t\tfrappe.throw(_(\"{0} {1} not found\").format(_(self.doctype), self.name), frappe.DoesNotExistError)"
   }, 
   "lnum": 109
  }, 
  {
   "call": "(self=<frappe.database.Database instance>, doctype=u'Item Price', filters=u'Handy-122038', fieldname=u'*', ignore=None, as_dict=1, debug=False, cache=False)", 
   "dump": {
    "as_dict": "1", 
    "cache": "False", 
    "debug": "False", 
    "doctype": "u'Item Price'", 
    "fieldname": "u'*'", 
    "filters": "u'Handy-122038'", 
    "ignore": "None", 
    "ret": "undefined", 
    "self": "<frappe.database.Database instance>", 
    "self. get_values": "<bound method Database.get_values of <frappe.database.Database instance>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/database.py", 
   "func": "get_value", 
   "lines": {
    "408": "\t\t\"\"\"", 
    "409": "", 
    "410": "\t\tret = self.get_values(doctype, filters, fieldname, ignore, as_dict, debug, cache=cache)", 
    "411": "", 
    "412": "\t\treturn ((len(ret[0]) > 1 or as_dict) and ret[0] or ret[0][0]) if ret else None"
   }, 
   "lnum": 410
  }, 
  {
   "call": "(self=<frappe.database.Database instance>, doctype=u'Item Price', filters=u'Handy-122038', fieldname=u'*', ignore=None, as_dict=1, debug=False, order_by=None, update=None, cache=False)", 
   "dump": {
    "as_dict": "1", 
    "debug": "False", 
    "doctype": "u'Item Price'", 
    "fields": "u'*'", 
    "filters": "u'Handy-122038'", 
    "order_by": "None", 
    "out": "None", 
    "self": "<frappe.database.Database instance>", 
    "self. _get_values_from_table": "<bound method Database._get_values_from_table of <frappe.database.Database instance>>", 
    "update": "None"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/database.py", 
   "func": "get_values", 
   "lines": {
    "449": "\t\t\tif (filters is not None) and (filters!=doctype or doctype==\"DocType\"):", 
    "450": "\t\t\t\ttry:", 
    "451": "\t\t\t\t\tout = self._get_values_from_table(fields, filters, doctype, as_dict, debug, order_by, update)", 
    "452": "\t\t\t\texcept Exception, e:", 
    "453": "\t\t\t\t\tif ignore and e.args[0] in (1146, 1054):"
   }, 
   "lnum": 451
  }, 
  {
   "call": "(self=<frappe.database.Database instance>, fields=u'*', filters=u'Handy-122038', doctype=u'Item Price', as_dict=True, debug=False, order_by=u'', update=None)", 
   "dump": {
    "as_dict": "True", 
    "conditions": "u'`name` = %(name)s'", 
    "debug": "False", 
    "order_by": "u''", 
    "update": "None", 
    "values": "{u'name': u'Handy-122038'}"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/database.py", 
   "func": "_get_values_from_table", 
   "lines": {
    "561": "", 
    "562": "\t\tr = self.sql(\"select {0} from `tab{1}` where {2} {3}\".format(fl, doctype,", 
    "563": "\t\t\tconditions, order_by), values, as_dict=as_dict, debug=debug, update=update)", 
    "564": "", 
    "565": "\t\treturn r"
   }, 
   "lnum": 563
  }, 
  {
   "call": "(self=<frappe.database.Database instance>, query=u'select * from `tabItem Price` where `name` = %(name)s ', values={u'name': u'Handy-122038'}, as_dict=True, as_list=0, formatted=0, debug=False, ignore_ddl=0, as_utf8=0, auto_commit=0, update=None)", 
   "dump": {
    "query": "u'select * from `tabItem Price` where `name` = %(name)s '", 
    "self": "<frappe.database.Database instance>", 
    "self. _cursor": "<MySQLdb.cursors.Cursor object>", 
    "self._cursor. execute": "<bound method Cursor.execute of <MySQLdb.cursors.Cursor object>>", 
    "values": "{u'name': u'Handy-122038'}"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/database.py", 
   "func": "sql", 
   "lines": {
    "135": "\t\t\t\t\tfrappe.log(values)", 
    "136": "\t\t\t\t\tfrappe.log(\">>>>\")", 
    "137": "\t\t\t\tself._cursor.execute(query, values)", 
    "138": "", 
    "139": "\t\t\telse:"
   }, 
   "lnum": 137
  }, 
  {
   "call": "(self=<MySQLdb.cursors.Cursor object>, query='select * from `tabItem Price` where `name` = %(name)s ', args={u'name': u'Handy-122038'})", 
   "dump": {
    "args": "{u'name': u'Handy-122038'}", 
    "args. iteritems": "<built-in method iteritems of dict object>", 
    "item": "undefined", 
    "key": "undefined"
   }, 
   "file": "/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/cursors.py", 
   "func": "execute", 
   "lines": {
    "183": "            if isinstance(args, dict):", 
    "184": "                query = query % dict((key, db.literal(item))", 
    "185": "                                     for key, item in args.iteritems())", 
    "186": "            else:", 
    "187": "                query = query % tuple([db.literal(item) for item in args])"
   }, 
   "lnum": 185
  }, 
  {
   "call": "((key=u'name', item=u'Handy-122038'))", 
   "dump": {
    "args": "undefined", 
    "item": "u'Handy-122038'", 
    "key": "u'name'"
   }, 
   "file": "/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/cursors.py", 
   "func": "<genexpr>", 
   "lines": {
    "183": "            if isinstance(args, dict):", 
    "184": "                query = query % dict((key, db.literal(item))", 
    "185": "                                     for key, item in args.iteritems())", 
    "186": "            else:", 
    "187": "                query = query % tuple([db.literal(item) for item in args])"
   }, 
   "lnum": 185
  }, 
  {
   "call": "(self=<_mysql.connection open to 'localhost' at 9966c1c>, o=u'Handy-122038')", 
   "dump": {
    "o": "u'Handy-122038'", 
    "self": "<_mysql.connection open to 'localhost' at 9966c1c>", 
    "self. encoders": "{<type 'array.array'>: <function array2Str>, <type 'tuple'>: <function quote_tuple>, <type 'set'>: <function Set2Str>, <type 'long'>: <function Thing2Str>, <type 'float'>: <function Float2Str>, <type 'instance'>: <function Instance2Str>, <type 'int'>: <function Thing2Str>, <type 'bool'>: <function Bool2Str>, <type 'object'>: <function Instance2Str>, <type 'NoneType'>: <function None2NULL>, ...}", 
    "self. escape": "<built-in method escape of Connection object>"
   }, 
   "file": "/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/connections.py", 
   "func": "literal", 
   "lines": {
    "276": "", 
    "277": "        \"\"\"", 
    "278": "        return self.escape(o, self.encoders)", 
    "279": "", 
    "280": "    def begin(self):"
   }, 
   "lnum": 278
  }, 
  {
   "call": "(u=u'Handy-122038', dummy={<type 'array.array'>: <function array2Str>, <type 'tuple'>: <function quote_tuple>, <type 'set'>: <function Set2Str>, <type 'long'>: <function Thing2Str>, <type 'float'>: <function Float2Str>, <type 'instance'>: <function Instance2Str>, <type 'int'>: <function Thing2Str>, <type 'bool'>: <function Bool2Str>, <type 'object'>: <function Instance2Str>, <type 'NoneType'>: <function None2NULL>, ...})", 
   "dump": {
    "db": "<weakproxy at 0xb5865b44 to Connection>", 
    "db. literal": "<bound method Connection.literal of <_mysql.connection open to 'localhost' at 9966c1c>>", 
    "u": "u'Handy-122038'", 
    "u. encode": "<built-in method encode of unicode object>", 
    "unicode_literal": "<function unicode_literal>", 
    "unicode_literal. charset": "u'utf8'"
   }, 
   "file": "/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/connections.py", 
   "func": "unicode_literal", 
   "lines": {
    "206": "        def _get_unicode_literal():", 
    "207": "            def unicode_literal(u, dummy=None):", 
    "208": "                return db.literal(u.encode(unicode_literal.charset))", 
    "209": "            return unicode_literal", 
    "210": ""
   }, 
   "lnum": 208
  }, 
  {
   "call": "(self=<_mysql.connection open to 'localhost' at 9966c1c>, o='Handy-122038')", 
   "dump": {
    "o": "'Handy-122038'", 
    "self": "<_mysql.connection open to 'localhost' at 9966c1c>", 
    "self. encoders": "{<type 'array.array'>: <function array2Str>, <type 'tuple'>: <function quote_tuple>, <type 'set'>: <function Set2Str>, <type 'long'>: <function Thing2Str>, <type 'float'>: <function Float2Str>, <type 'instance'>: <function Instance2Str>, <type 'int'>: <function Thing2Str>, <type 'bool'>: <function Bool2Str>, <type 'object'>: <function Instance2Str>, <type 'NoneType'>: <function None2NULL>, ...}", 
    "self. escape": "<built-in method escape of Connection object>"
   }, 
   "file": "/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/connections.py", 
   "func": "literal", 
   "lines": {
    "276": "", 
    "277": "        \"\"\"", 
    "278": "        return self.escape(o, self.encoders)", 
    "279": "", 
    "280": "    def begin(self):"
   }, 
   "lnum": 278
  }
 ], 
 "locals": {
  "o": "'Handy-122038'", 
  "self": "<_mysql.connection open to 'localhost' at 9966c1c>"
 }, 
 "pyver": "Python 2.7.6: /home/frappe/frappe-bench/env/bin/python (prefix: /home/frappe/frappe-bench/env)", 
 "timestamp": "2016-12-16 13:42:30.935735", 
 "traceback": "Traceback (most recent call last):\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/app.py\", line 55, in application\n    response = frappe.handler.handle()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/handler.py\", line 19, in handle\n    execute_cmd(cmd)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/handler.py\", line 36, in execute_cmd\n    ret = frappe.call(method, **frappe.form_dict)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py\", line 879, in call\n    return fn(*args, **newargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/desk/form/save.py\", line 22, in savedocs\n    doc.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 231, in insert\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 87, in create_item_price\n    existing_rate.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 55, in on_update\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 85, in create_item_price\n    existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py\", line 578, in get_doc\n    return frappe.model.document.get_doc(arg1, arg2)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 47, in get_doc\n    return controller(arg1, arg2)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 80, in __init__\n    self.load_from_db()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 109, in load_from_db\n    d = frappe.db.get_value(self.doctype, self.name, \"*\", as_dict=1)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/database.py\", line 410, in get_value\n    ret = self.get_values(doctype, filters, fieldname, ignore, as_dict, debug, cache=cache)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/database.py\", line 451, in get_values\n    out = self._get_values_from_table(fields, filters, doctype, as_dict, debug, order_by, update)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/database.py\", line 563, in _get_values_from_table\n    conditions, order_by), values, as_dict=as_dict, debug=debug, update=update)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/database.py\", line 137, in sql\n    self._cursor.execute(query, values)\n  File \"/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 185, in execute\n    for key, item in args.iteritems())\n  File \"/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 185, in <genexpr>\n    for key, item in args.iteritems())\n  File \"/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/connections.py\", line 278, in literal\n    return self.escape(o, self.encoders)\n  File \"/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/connections.py\", line 208, in unicode_literal\n    return db.literal(u.encode(unicode_literal.charset))\n  File \"/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/connections.py\", line 278, in literal\n    return self.escape(o, self.encoders)\nRuntimeError: maximum recursion depth exceeded\n"
}