{
 "etype": "<type 'exceptions.KeyError'>", 
 "evalue": "KeyError('company',)", 
 "exception": {
  "args": "('company',)", 
  "message": "'company'"
 }, 
 "frames": [
  {
   "call": "(request=<Request 'http://192.168.1.160/?report_name=Stoc...ppe.desk.query_report.run&_=1490247378312' [GET]>)", 
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/frappe/frappe-bench/apps/frappe/frappe/handler.pyc'>", 
    "frappe.handler. handle": "<function handle>", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "response": "None"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/app.py", 
   "func": "application", 
   "lines": {
    "53": "", 
    "54": "\t\tif frappe.local.form_dict.cmd:", 
    "55": "\t\t\tresponse = frappe.handler.handle()", 
    "56": "", 
    "57": "\t\telif frappe.request.path.startswith(\"/api/\"):"
   }, 
   "lnum": 55
  }, 
  {
   "call": "()", 
   "dump": {
    "cmd": "u'frappe.desk.query_report.run'", 
    "global execute_cmd": "<function execute_cmd>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "handle", 
   "lines": {
    "17": "", 
    "18": "\tif cmd!='login':", 
    "19": "\t\texecute_cmd(cmd)", 
    "20": "", 
    "21": "\treturn build_response(\"json\")"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(cmd=u'frappe.desk.query_report.run', from_async=False)", 
   "dump": {
    "frappe. call": "<function call>", 
    "frappe. form_dict": "{'cmd': u'frappe.desk.query_report.run', 'filter...te\":\"2017-03-23\"}', 'report_name': u'Stock Card'}", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "method": "<function run>", 
    "ret": "undefined"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "execute_cmd", 
   "lines": {
    "34": "\tis_whitelisted(method)", 
    "35": "", 
    "36": "\tret = frappe.call(method, **frappe.form_dict)", 
    "37": "", 
    "38": "\t# returns with a message"
   }, 
   "lnum": 36
  }, 
  {
   "call": "(fn=<function run>, *args=(), **kwargs={'cmd': u'frappe.desk.query_report.run', 'filters': u'{\"from_date\":\"2017-02-23\",\"to_date\":\"2017-03-23\"}', 'report_name': u'Stock Card'})", 
   "dump": {
    "args": "()", 
    "fn": "<function run>", 
    "newargs": "{'filters': u'{\"from_date\":\"2017-02-23\",\"to_date\":\"2017-03-23\"}', 'report_name': u'Stock Card'}"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "call", 
   "lines": {
    "877": "\t\tdel newargs[\"flags\"]", 
    "878": "", 
    "879": "\treturn fn(*args, **newargs)", 
    "880": "", 
    "881": "def make_property_setter(args, ignore_validate=False, validate_fields_for_doctype=True):"
   }, 
   "lnum": 879
  }, 
  {
   "call": "(report_name=u'Stock Card', filters={u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'})", 
   "dump": {
    "filters": "{u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'}", 
    "frappe. _dict": "<class 'frappe._dict'>", 
    "frappe. get_attr": "<function get_attr>", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "method_name": "u'erpnext.stock.report.stock_card.stock_card.execute'", 
    "res": "undefined"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/desk/query_report.py", 
   "func": "run", 
   "lines": {
    "86": "\t\tif report.is_standard==\"Yes\":", 
    "87": "\t\t\tmethod_name = get_report_module_dotted_path(module, report.name) + \".execute\"", 
    "88": "\t\t\tres = frappe.get_attr(method_name)(frappe._dict(filters))", 
    "89": "", 
    "90": "\t\t\tcolumns, result = res[0], res[1]"
   }, 
   "lnum": 88
  }, 
  {
   "call": "(filters={u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'})", 
   "dump": {
    "filters": "{u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'}", 
    "global get_stock_ledger_entries": "<function get_stock_ledger_entries>", 
    "sl_entries": "undefined"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/stock/report/stock_card/stock_card.py", 
   "func": "execute", 
   "lines": {
    "8": "def execute(filters=None):", 
    "9": "    columns = get_columns()", 
    "10": "    sl_entries = get_stock_ledger_entries(filters)", 
    "11": "    item_details = get_item_details(filters)", 
    "12": "    opening_row = get_opening_balance(filters, columns)"
   }, 
   "lnum": 10
  }, 
  {
   "call": "(filters={u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'})", 
   "dump": {
    "as_dict": "undefined", 
    "filters": "{u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'}", 
    "global get_sle_conditions": "<function get_sle_conditions>", 
    "sle_conditions": "undefined"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/stock/report/stock_card/stock_card.py", 
   "func": "get_stock_ledger_entries", 
   "lines": {
    "54": "            {sle_conditions}", 
    "55": "            order by posting_date asc, posting_time asc, name asc\"\"\"\\", 
    "56": "        .format(sle_conditions=get_sle_conditions(filters)), filters, as_dict=1)", 
    "57": "", 
    "58": "def get_item_details(filters):"
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<frappe.database.Database instance>, query=u'select concat_ws(\" \", posting_date, posting_ti... by posting_date asc, posting_time asc, name asc', values={u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'}, as_dict=1, as_list=0, formatted=0, debug=0, ignore_ddl=0, as_utf8=0, auto_commit=0, update=None)", 
   "dump": {
    "query": "u'select concat_ws(\" \", posting_date, posting_ti... by posting_date asc, posting_time asc, name asc'", 
    "self": "<frappe.database.Database instance>", 
    "self. _cursor": "<MySQLdb.cursors.Cursor object>", 
    "self._cursor. execute": "<bound method Cursor.execute of <MySQLdb.cursors.Cursor object>>", 
    "values": "{u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'}"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/database.py", 
   "func": "sql", 
   "lines": {
    "135": "\t\t\t\t\tfrappe.log(values)", 
    "136": "\t\t\t\t\tfrappe.log(\">>>>\")", 
    "137": "\t\t\t\tself._cursor.execute(query, values)", 
    "138": "", 
    "139": "\t\t\telse:"
   }, 
   "lnum": 137
  }, 
  {
   "call": "(self=<MySQLdb.cursors.Cursor object>, query='select concat_ws(\" \", posting_date, posting_time...r by posting_date asc, posting_time asc, name asc', args={u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'})", 
   "dump": {
    "args": "{u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'}", 
    "args. iteritems": "<built-in method iteritems of dict object>", 
    "item": "undefined", 
    "key": "undefined"
   }, 
   "file": "/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/cursors.py", 
   "func": "execute", 
   "lines": {
    "183": "            if isinstance(args, dict):", 
    "184": "                query = query % dict((key, db.literal(item))", 
    "185": "                                     for key, item in args.iteritems())", 
    "186": "            else:", 
    "187": "                query = query % tuple([db.literal(item) for item in args])"
   }, 
   "lnum": 185
  }
 ], 
 "locals": {
  "args": "{u'from_date': u'2017-02-23', u'to_date': u'2017-03-23'}", 
  "db": "<weakproxy at 0xb57c5694 to Connection>", 
  "query": "'select concat_ws(\" \", posting_date, posting_time...r by posting_date asc, posting_time asc, name asc'", 
  "self": "<MySQLdb.cursors.Cursor object>"
 }, 
 "pyver": "Python 2.7.6: /home/frappe/frappe-bench/env/bin/python (prefix: /home/frappe/frappe-bench/env)", 
 "timestamp": "2017-03-23 13:36:25.059988", 
 "traceback": "Traceback (most recent call last):\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/app.py\", line 55, in application\n    response = frappe.handler.handle()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/handler.py\", line 19, in handle\n    execute_cmd(cmd)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/handler.py\", line 36, in execute_cmd\n    ret = frappe.call(method, **frappe.form_dict)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py\", line 879, in call\n    return fn(*args, **newargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/desk/query_report.py\", line 88, in run\n    res = frappe.get_attr(method_name)(frappe._dict(filters))\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/stock/report/stock_card/stock_card.py\", line 10, in execute\n    sl_entries = get_stock_ledger_entries(filters)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/stock/report/stock_card/stock_card.py\", line 56, in get_stock_ledger_entries\n    .format(sle_conditions=get_sle_conditions(filters)), filters, as_dict=1)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/database.py\", line 137, in sql\n    self._cursor.execute(query, values)\n  File \"/home/frappe/frappe-bench/env/local/lib/python2.7/site-packages/MySQLdb/cursors.py\", line 185, in execute\n    for key, item in args.iteritems())\nKeyError: 'company'\n"
}