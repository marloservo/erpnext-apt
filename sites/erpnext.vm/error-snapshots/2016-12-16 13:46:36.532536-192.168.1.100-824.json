{
 "etype": "<type 'exceptions.RuntimeError'>", 
 "evalue": "RuntimeError('maximum recursion depth exceeded',)", 
 "exception": {
  "args": "('maximum recursion depth exceeded',)", 
  "message": "'maximum recursion depth exceeded'"
 }, 
 "frames": [
  {
   "call": "(request=<Request 'http://192.168.1.160/' [POST]>)", 
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/frappe/frappe-bench/apps/frappe/frappe/handler.pyc'>", 
    "frappe.handler. handle": "<function handle>", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "response": "None"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/app.py", 
   "func": "application", 
   "lines": {
    "53": "", 
    "54": "\t\tif frappe.local.form_dict.cmd:", 
    "55": "\t\t\tresponse = frappe.handler.handle()", 
    "56": "", 
    "57": "\t\telif frappe.request.path.startswith(\"/api/\"):"
   }, 
   "lnum": 55
  }, 
  {
   "call": "()", 
   "dump": {
    "cmd": "u'frappe.desk.form.save.savedocs'", 
    "global execute_cmd": "<function execute_cmd>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "handle", 
   "lines": {
    "17": "", 
    "18": "\tif cmd!='login':", 
    "19": "\t\texecute_cmd(cmd)", 
    "20": "", 
    "21": "\treturn build_response(\"json\")"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(cmd=u'frappe.desk.form.save.savedocs', from_async=False)", 
   "dump": {
    "frappe. call": "<function call>", 
    "frappe. form_dict": "{'action': u'Save', 'doc': u'{\"sku_name\":\"122038...42Z\"}', 'cmd': u'frappe.desk.form.save.savedocs'}", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "method": "<function savedocs>", 
    "ret": "undefined"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "execute_cmd", 
   "lines": {
    "34": "\tis_whitelisted(method)", 
    "35": "", 
    "36": "\tret = frappe.call(method, **frappe.form_dict)", 
    "37": "", 
    "38": "\t# returns with a message"
   }, 
   "lnum": 36
  }, 
  {
   "call": "(fn=<function savedocs>, *args=(), **kwargs={'action': u'Save', 'cmd': u'frappe.desk.form.save.savedocs', 'doc': u'{\"sku_name\":\"122038\",\"modified_by\":\"Administra...000,\"__last_sync_on\":\"2016-12-16T05:46:35.142Z\"}'})", 
   "dump": {
    "args": "()", 
    "fn": "<function savedocs>", 
    "newargs": "{'action': u'Save', 'doc': u'{\"sku_name\":\"122038\",\"modified_by\":\"Administra...000,\"__last_sync_on\":\"2016-12-16T05:46:35.142Z\"}'}"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "call", 
   "lines": {
    "877": "\t\tdel newargs[\"flags\"]", 
    "878": "", 
    "879": "\treturn fn(*args, **newargs)", 
    "880": "", 
    "881": "def make_property_setter(args, ignore_validate=False, validate_fields_for_doctype=True):"
   }, 
   "lnum": 879
  }, 
  {
   "call": "(doc=<erpnext.selling.doctype.sku.sku.SKU object>, action=u'Save')", 
   "dump": {
    "doc": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "doc. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/desk/form/save.py", 
   "func": "savedocs", 
   "lines": {
    "20": "\t\telse:", 
    "21": "\t\t\ttry:", 
    "22": "\t\t\t\tdoc.save()", 
    "23": "\t\t\texcept frappe.NameError, e:", 
    "24": "\t\t\t\tdoctype, name, original_exception = e if isinstance(e, tuple) else (doc.doctype or \"\", doc.name or \"\", None)"
   }, 
   "lnum": 22
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "sku": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "sku. save": "<bound method SKU.save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()", 
    "57": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _save": "<bound method SKU._save of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "save", 
   "lines": {
    "240": "\tdef save(self, *args, **kwargs):", 
    "241": "\t\t\"\"\"Wrapper for _save\"\"\"", 
    "242": "\t\treturn self._save(*args, **kwargs)", 
    "243": "", 
    "244": "\tdef _save(self, ignore_permissions=None):"
   }, 
   "lnum": 242
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_post_save_methods": "<bound method SKU.run_post_save_methods of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "_save", 
   "lines": {
    "284": "", 
    "285": "\t\tself.update_children()", 
    "286": "\t\tself.run_post_save_methods()", 
    "287": "", 
    "288": "\t\treturn self"
   }, 
   "lnum": 286
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. run_method": "<bound method SKU.run_method of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "726": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "727": "\t\tif self._action==\"save\":", 
    "728": "\t\t\tself.run_method(\"on_update\")", 
    "729": "\t\telif self._action==\"submit\":", 
    "730": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 728
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. create_item_price": "<bound method SKU.create_item_price of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "on_update", 
   "lines": {
    "43": "        #MARLO 20161216", 
    "44": "        self.create_pricelist()", 
    "45": "        self.create_item_price()", 
    "46": "", 
    "47": "    def create_pricelist(self):"
   }, 
   "lnum": 45
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "new_rate": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "new_rate. insert": "<bound method ItemPrice.insert of <erpnext.selling.doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py", 
   "func": "create_item_price", 
   "lines": {
    "81": "                    \"currency\": \"PHP\",", 
    "82": "                })", 
    "83": "                new_rate.insert()", 
    "84": "            else:", 
    "85": "                existing_rate = frappe.get_doc(\"Item Price\", {\"sku\" : self.name, \"selling\": 1})"
   }, 
   "lnum": 83
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, ignore_permissions=None)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_before_save_methods": "<bound method ItemPrice.run_before_save_methods ....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "210": "", 
    "211": "\t\tself.flags.in_insert = True", 
    "212": "\t\tself.run_before_save_methods()", 
    "213": "\t\tself._validate()", 
    "214": "\t\tself.set_docstatus()"
   }, 
   "lnum": 212
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. run_method": "<bound method ItemPrice.run_method of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_before_save_methods", 
   "lines": {
    "708": "", 
    "709": "\t\tif self._action==\"save\":", 
    "710": "\t\t\tself.run_method(\"validate\")", 
    "711": "\t\t\tself.run_method(\"before_save\")", 
    "712": "\t\telif self._action==\"submit\":"
   }, 
   "lnum": 710
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method=u'validate', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function validate>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "659": "", 
    "660": "\t\tfn.__name__ = method.encode(\"utf-8\")", 
    "661": "\t\treturn Document.hook(fn)(self, *args, **kwargs)", 
    "662": "", 
    "663": "\t@staticmethod"
   }, 
   "lnum": 661
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "837": "", 
    "838": "\t\t\tcomposed = compose(f, *hooks)", 
    "839": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "840": "", 
    "841": "\t\treturn composer"
   }, 
   "lnum": 839
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, method='validate', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function validate>", 
    "kwargs": "{}", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "820": "\t\tdef compose(fn, *hooks):", 
    "821": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "822": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "823": "\t\t\t\tfor f in hooks:", 
    "824": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 822
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'validate'", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "653": "", 
    "654": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "655": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "656": "\t\telse:", 
    "657": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 655
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. update_sku": "<bound method ItemPrice.update_sku of <erpnext.s....doctype.item_price.item_price.ItemPrice object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "validate", 
   "lines": {
    "17": "        self.update_price_list_details()", 
    "18": "        self.update_item_details()", 
    "19": "        self.update_sku()", 
    "20": "", 
    "21": "    def validate_item(self):"
   }, 
   "lnum": 19
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.item_price.item_price.ItemPrice object>)", 
   "dump": {
    "frappe. get_doc": "<function get_doc>", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "self": "<erpnext.selling.doctype.item_price.item_price.ItemPrice object>", 
    "self. sku": "u'Handy-122038'", 
    "sku": "undefined"
   }, 
   "file": "/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py", 
   "func": "update_sku", 
   "lines": {
    "52": "        # MARLO 20161216", 
    "53": "        if self.sku:", 
    "54": "            sku = frappe.get_doc(\"SKU\", self.sku)", 
    "55": "            sku.update({\"group_rate\" : self.price_list_rate})", 
    "56": "            sku.save()"
   }, 
   "lnum": 54
  }, 
  {
   "call": "(arg1=u'SKU', arg2=u'Handy-122038')", 
   "dump": {
    "arg1": "u'SKU'", 
    "arg2": "u'Handy-122038'", 
    "frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "frappe. model": "<module 'frappe.model' from '/home/frappe/frappe-bench/apps/frappe/frappe/model/__init__.pyc'>", 
    "frappe.model. document": "<module 'frappe.model.document' from '/home/frap...ppe-bench/apps/frappe/frappe/model/document.pyc'>", 
    "frappe.model.document. get_doc": "<function get_doc>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "get_doc", 
   "lines": {
    "576": "\t\"\"\"", 
    "577": "\timport frappe.model.document", 
    "578": "\treturn frappe.model.document.get_doc(arg1, arg2)", 
    "579": "", 
    "580": "def get_last_doc(doctype):"
   }, 
   "lnum": 578
  }, 
  {
   "call": "(arg1=u'SKU', arg2=u'Handy-122038')", 
   "dump": {
    "arg1": "u'SKU'", 
    "arg2": "u'Handy-122038'", 
    "controller": "<class 'erpnext.selling.doctype.sku.sku.SKU'>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "get_doc", 
   "lines": {
    "45": "\tcontroller = get_controller(doctype)", 
    "46": "\tif controller:", 
    "47": "\t\treturn controller(arg1, arg2)", 
    "48": "", 
    "49": "\traise ImportError, arg1"
   }, 
   "lnum": 47
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>, arg1=u'SKU', arg2=u'Handy-122038')", 
   "dump": {
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. load_from_db": "<bound method SKU.load_from_db of <erpnext.selling.doctype.sku.sku.SKU object>>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "__init__", 
   "lines": {
    "78": "\t\t\t\t\tself.name = arg2", 
    "79": "", 
    "80": "\t\t\tself.load_from_db()", 
    "81": "", 
    "82": "\t\telif isinstance(arg1, dict):"
   }, 
   "lnum": 80
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "builtin False": "False", 
    "builtin getattr": "<built-in function getattr>", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. meta": "<frappe.model.meta.Meta object>", 
    "self.meta. issingle": "0L"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "load_from_db", 
   "lines": {
    "95": "\t\t\"\"\"Load document and children from database and create properties", 
    "96": "\t\tfrom fields\"\"\"", 
    "97": "\t\tif not getattr(self, \"_metaclass\", False) and self.meta.issingle:", 
    "98": "\t\t\tsingle_doc = frappe.db.get_singles_dict(self.doctype)", 
    "99": "\t\t\tif not single_doc:"
   }, 
   "lnum": 97
  }, 
  {
   "call": "(self=<erpnext.selling.doctype.sku.sku.SKU object>)", 
   "dump": {
    "frappe. get_meta": "<function get_meta>", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "self": "<erpnext.selling.doctype.sku.sku.SKU object>", 
    "self. _meta": "<frappe.model.meta.Meta object>", 
    "self. doctype": "u'SKU'"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/base_document.py", 
   "func": "meta", 
   "lines": {
    "57": "\tdef meta(self):", 
    "58": "\t\tif not hasattr(self, \"_meta\"):", 
    "59": "\t\t\tself._meta = frappe.get_meta(self.doctype)", 
    "60": "", 
    "61": "\t\treturn self._meta"
   }, 
   "lnum": 59
  }, 
  {
   "call": "(doctype=u'SKU', cached=True)", 
   "dump": {
    "cached": "True", 
    "doctype": "u'SKU'", 
    "frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "frappe. model": "<module 'frappe.model' from '/home/frappe/frappe-bench/apps/frappe/frappe/model/__init__.pyc'>", 
    "frappe.model. meta": "<module 'frappe.model.meta' from '/home/frappe/frappe-bench/apps/frappe/frappe/model/meta.pyc'>", 
    "frappe.model.meta. get_meta": "<function get_meta>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "get_meta", 
   "lines": {
    "593": "\t\"\"\"Get `frappe.model.meta.Meta` instance of given doctype name.\"\"\"", 
    "594": "\timport frappe.model.meta", 
    "595": "\treturn frappe.model.meta.get_meta(doctype, cached=cached)", 
    "596": "", 
    "597": "def get_meta_module(doctype):"
   }, 
   "lnum": 595
  }, 
  {
   "call": "(doctype=u'SKU', cached=True)", 
   "dump": {
    ").hget": "undefined", 
    "doctype": "u'SKU'", 
    "frappe. cache": "<function cache>", 
    "global Meta": "<class 'frappe.model.meta.Meta'>", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/model/meta.py", 
   "func": "get_meta", 
   "lines": {
    "27": "def get_meta(doctype, cached=True):", 
    "28": "\tif cached:", 
    "29": "\t\treturn frappe.cache().hget(\"meta\", doctype, lambda: Meta(doctype))", 
    "30": "\telse:", 
    "31": "\t\treturn Meta(doctype)"
   }, 
   "lnum": 29
  }, 
  {
   "call": "(self=RedisWrapper<ConnectionPool<Connection<host=localhost,port=13000,db=0>>>, name=u'meta', key=u'SKU', generator=<function <lambda>>)", 
   "dump": {
    "frappe. local": "<werkzeug.local.Local object>", 
    "frappe.local. cache": "{'d56cb677eaab3383|_link_count': {(u'Account', u'All Warehouses - APT'): 1, (u'Account', u'Stock Adjustment - APT'): 4, (u'Company', u'APT Home Products Corporation'): 8, (u'Cost Center', u'Main - APT'): 4, (u'Currency', u'PHP'): 47, (u'Customer', u'Handy-101'): 1, (u'Customer Group', u'All Customer Groups'): 1, (u'Customer Group', u'Handy'): 139, (u'DocType', u'Customer'): 1, (u'DocType', u'DocType'): 3, ...}, 'd56cb677eaab3383|app_hooks': {'after_install': [u'frappe.utils.install.after_install', u'erpnext.setup.install.after_install'], 'app_color': [u'orange', u'#e74c3c'], 'app_description': [u'Full stack web framework with Python, Javascript, MariaDB, Redis, Node', u'ERP made simple'], 'app_email': [u'info@frappe.io', u'info@erpnext.com'], 'app_icon': [u'octicon octicon-circuit-board', u'icon-th'], 'app_include_css': [u'assets/css/desk.min.css', u'assets/css/list.min.css', u'assets/css/form.min.css', u'assets/css/report.min.css', u'assets/css/module.min.css', u'assets/css/erpnext.css'], 'app_include_js': [u'assets/js/libs.min.js', u'assets/js/desk.min.js', u'assets/js/editor.min.js', u'assets/js/list.min.js', u'assets/js/form.min.js', u'assets/js/report.min.js', u'assets/js/d3.min.js', u'assets/frappe/js/frappe/toolbar.js', u'assets/js/erpnext.min.js'], 'app_license': [u'MIT', u'GNU General Public License (v3)'], 'app_name': [u'frappe', u'erpnext'], 'app_publisher': [u'Frappe Technologies', u'Frappe Technologies Pvt. Ltd.'], ...}, 'd56cb677eaab3383|app_modules': {u'erpnext': [u'accounts', u'crm', u'buying', u'projects', u'selling', u'setup', u'hr', u'manufacturing', u'stock', u'support', u'utilities', u'shopping_cart', u'hub_node', u'portal', u'maintenance', u'schools', u'maintenance_setup'], u'erpnext_demo': [], u'frappe': [u'core', u'website', u'workflow', u'email', u'custom', u'geo', u'desk', u'print', u'integrations']}, 'd56cb677eaab3383|is_table': [u'About Us Team Member', u'Appraisal Goal', u'Appraisal Template Goal', u'Assessment Result', u'Asset Category Account', u'Attendance Tool Student', u'Bank Reconciliation Detail', u'Block Module', u'BOM Explosion Item', u'BOM Item', u'BOM Operation', u'Budget Account', u'C-Form Invoice Detail', u'Company History', u'Customize Form Field', u'DefaultValue', u'Delivery Note Item', u'Dependent Task', u'Depreciation Schedule', u'DocField', ...], 'd56cb677eaab3383|langinfo': [u'ar\\t\\u0627\\u0644\\u0639\\u0631\\u0628\\u064a\\u0629', u'bg\\tb\\u01celgarski', u'bn\\t\\u09ac\\u09be\\u0982\\u09b2\\u09be', u'bo\\t\\u0f63\\u0fb7\\u0f0b\\u0f66\\u0f60\\u0f72\\u0f0b\\u0f66\\u0f90\\u0f51\\u0f0b', u'bs\\tbosanski', u'ca\\tcatal\\xe0', u'cs\\t\\u010desky', u'da\\tdansk', u'da-DK\\t dansk (Danmark)', u'de\\tdeutsch', u'el\\t\\u03b5\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ac', u'en\\tenglish', u'es\\tespa\\xf1ol', u'es-PE\\t Espa\\xf1ol (Per\\xfa)', u'et\\teesti', u'fa\\t\\u067e\\u0627\\u0631\\u0633\\u06cc', u'fi\\tsuomalainen', u'fr\\tfran\\xe7ais', u'gu\\t\\u0a97\\u0ac1\\u0a9c\\u0ab0\\u0abe\\u0aa4\\u0ac0', u'he\\t\\u05e2\\u05d1\\u05e8\\u05d9\\u05ea', ...], 'd56cb677eaab3383|module_app': {u'accounts': u'erpnext', u'buying': u'erpnext', u'core': u'frappe', u'crm': u'erpnext', u'custom': u'frappe', u'desk': u'frappe', u'email': u'frappe', u'geo': u'frappe', u'hr': u'erpnext', u'hub_node': u'erpnext', ...}, 'd56cb677eaab3383|system_settings': {u'disable_standard_email_footer': u'0', u'sessi... u'parentfield': None, u'enable_scheduler': u'0'}, 'd56cb677eaab3383|time_zone': u'Asia/Manila', u'defaults': {u'Administrator': {}, u'__default': {u'disable_in_words': u'0', u'session_expiry': u...'Customer Name', u'item_naming_by': u'Item Code'}, u'__global': {u'installed_apps': u'[\"frappe\", \"erpnext\"]'}}, u'lang': {u'Administrator': u'en'}, ...}", 
    "global frappe": "<module 'frappe' from '/home/frappe/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "name": "u'meta'"
   }, 
   "file": "/home/frappe/frappe-bench/apps/frappe/frappe/utils/redis_wrapper.py", 
   "func": "hget", 
   "lines": {
    "144": "", 
    "145": "\tdef hget(self, name, key, generator=None):", 
    "146": "\t\tif not name in frappe.local.cache:", 
    "147": "\t\t\tfrappe.local.cache[name] = {}", 
    "148": "\t\tif key in frappe.local.cache[name]:"
   }, 
   "lnum": 146
  }
 ], 
 "locals": {
  "generator": "<function <lambda>>", 
  "key": "u'SKU'", 
  "name": "u'meta'", 
  "self": "RedisWrapper<ConnectionPool<Connection<host=localhost,port=13000,db=0>>>"
 }, 
 "pyver": "Python 2.7.6: /home/frappe/frappe-bench/env/bin/python (prefix: /home/frappe/frappe-bench/env)", 
 "timestamp": "2016-12-16 13:46:36.532797", 
 "traceback": "Traceback (most recent call last):\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/app.py\", line 55, in application\n    response = frappe.handler.handle()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/handler.py\", line 19, in handle\n    execute_cmd(cmd)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/handler.py\", line 36, in execute_cmd\n    ret = frappe.call(method, **frappe.form_dict)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py\", line 879, in call\n    return fn(*args, **newargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/desk/form/save.py\", line 22, in savedocs\n    doc.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 56, in update_sku\n    sku.save()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 242, in save\n    return self._save(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 286, in _save\n    self.run_post_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 728, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 45, in on_update\n    self.create_item_price()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/sku/sku.py\", line 83, in create_item_price\n    new_rate.insert()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 212, in insert\n    self.run_before_save_methods()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 710, in run_before_save_methods\n    self.run_method(\"validate\")\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 661, in run_method\n    return Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 839, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 822, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 655, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 19, in validate\n    self.update_sku()\n  File \"/home/frappe/frappe-bench/apps/erpnext/erpnext/selling/doctype/item_price/item_price.py\", line 54, in update_sku\n    sku = frappe.get_doc(\"SKU\", self.sku)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py\", line 578, in get_doc\n    return frappe.model.document.get_doc(arg1, arg2)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 47, in get_doc\n    return controller(arg1, arg2)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 80, in __init__\n    self.load_from_db()\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/document.py\", line 97, in load_from_db\n    if not getattr(self, \"_metaclass\", False) and self.meta.issingle:\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/base_document.py\", line 59, in meta\n    self._meta = frappe.get_meta(self.doctype)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/__init__.py\", line 595, in get_meta\n    return frappe.model.meta.get_meta(doctype, cached=cached)\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/model/meta.py\", line 29, in get_meta\n    return frappe.cache().hget(\"meta\", doctype, lambda: Meta(doctype))\n  File \"/home/frappe/frappe-bench/apps/frappe/frappe/utils/redis_wrapper.py\", line 146, in hget\n    if not name in frappe.local.cache:\nRuntimeError: maximum recursion depth exceeded\n"
}